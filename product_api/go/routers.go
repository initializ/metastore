/*
 * Metadata Store API.
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/metastore/v1/",
		Index,
	},

	Route{
		"HealthCheck",
		strings.ToUpper("Get"),
		"/metastore/v1/health",
		HealthCheck,
	},

	Route{
		"CreateImageReport",
		strings.ToUpper("Post"),
		"/metastore/v1/images",
		CreateImageReport,
	},

	Route{
		"GetImages",
		strings.ToUpper("Get"),
		"/metastore/v1/images",
		GetImages,
	},

	Route{
		"GetPackageImages",
		strings.ToUpper("Get"),
		"/metastore/v1/packages/{IDorName}/images",
		GetPackageImages,
	},

	Route{
		"GetVulnerabilityImages",
		strings.ToUpper("Get"),
		"/metastore/v1/vulnerabilities/{CVEID}/images",
		GetVulnerabilityImages,
	},

	Route{
		"GetImagePackages",
		strings.ToUpper("Get"),
		"/metastore/v1/images/{IDorDigest}/packages",
		GetImagePackages,
	},

	Route{
		"GetImagePackagesQuery",
		strings.ToUpper("Get"),
		"/metastore/v1/images/packages",
		GetImagePackagesQuery,
	},

	Route{
		"GetPackages",
		strings.ToUpper("Get"),
		"/metastore/v1/packages",
		GetPackages,
	},

	Route{
		"GetSourcePackagesQuery",
		strings.ToUpper("Get"),
		"/metastore/v1/sources/packages",
		GetSourcePackagesQuery,
	},

	Route{
		"GetVulnerabilityPackages",
		strings.ToUpper("Get"),
		"/metastore/v1/vulnerabilities/{CVEID}/packages",
		GetVulnerabilityPackages,
	},

	Route{
		"CreateSource",
		strings.ToUpper("Post"),
		"/metastore/v1/sources",
		CreateSource,
	},

	Route{
		"GetPackageSources",
		strings.ToUpper("Get"),
		"/metastore/v1/packages/{IDorName}/sources",
		GetPackageSources,
	},

	Route{
		"GetSources",
		strings.ToUpper("Get"),
		"/metastore/v1/sources",
		GetSources,
	},

	Route{
		"GetVulnerabilitySources",
		strings.ToUpper("Get"),
		"/metastore/v1/vulnerabilities/{CVEID}/sources",
		GetVulnerabilitySources,
	},

	Route{
		"GetImageVulnerabilities",
		strings.ToUpper("Get"),
		"/metastore/v1/images/{IDorDigest}/vulnerabilities",
		GetImageVulnerabilities,
	},

	Route{
		"GetPackageVulnerabilities",
		strings.ToUpper("Get"),
		"/metastore/v1/packages/{IDorName}/vulnerabilities",
		GetPackageVulnerabilities,
	},

	Route{
		"GetSourceVulnerabilitiesQuery",
		strings.ToUpper("Get"),
		"/metastore/v1/sources/vulnerabilities",
		GetSourceVulnerabilitiesQuery,
	},

	Route{
		"GetVulnerabilities",
		strings.ToUpper("Get"),
		"/metastore/v1/vulnerabilities",
		GetVulnerabilities,
	},
}
